# Universal AI Agent Platform - Platform Configuration
platform:
  version: "2.1.0"
  description: "Universal AI Agent Platform shared configuration"

  universal_settings:
    enable_multi_agent: true
    enable_caching: true
    max_concurrent_calls: 4
    testing_mode: true

  # Models used for different platform functions
  models:
    planning: "o4-mini"                 # Model for research topic planning
    research: "o4-mini"                 # Model for individual research calls
    synthesis: "o4-mini"                # Model for final synthesis

  # Universal budget tiers - same pricing and capabilities for ALL agents
  budget_tiers:
    - name: "basic"
      price: 1.00
      calls: 1
      description: "1 optimized call with intelligent architecture planning"
      time_estimate: "5-10 minutes"
      deliverables:
        - "Comprehensive analysis with detailed insights and specific rationales"
        - "Deep research with specific examples and URLs where applicable"
        - "Market analysis with multiple data sources where relevant"
        - "Risk assessment with detailed considerations"
        - "Implementation suggestions with timeline recommendations"
        - "Cost-benefit analysis with projections where applicable"
      
    - name: "standard"
      price: 3.00
      calls: 3
      description: "3 coordinated calls with intelligent architecture planning"
      time_estimate: "15-20 minutes"
      deliverables:
        - "Comprehensive analysis with detailed insights and specific rationales"
        - "Deep research with specific examples and URLs where applicable"
        - "Market analysis with multiple data sources where relevant"
        - "Risk assessment with detailed considerations"
        - "Implementation suggestions with timeline recommendations"
        - "Cost-benefit analysis with projections where applicable"
      
    - name: "premium"
      price: 5.00
      calls: 5
      description: "5 coordinated calls with intelligent architecture planning"
      time_estimate: "20-30 minutes"
      deliverables:
        - "Comprehensive analysis with detailed insights and specific rationales"
        - "Deep research with specific examples and URLs where applicable"
        - "Market analysis with multiple data sources where relevant"
        - "Risk assessment with detailed considerations"
        - "Implementation suggestions with timeline recommendations"
        - "Cost-benefit analysis with projections where applicable"

  # Common prompts used across all agent types
  prompts:

    # Universal synthesis call template - works with ANY agent type and ResearchOutput list
    synthesis_call: |
      {{ agent_personality }}
      
      You are synthesizing findings from multiple specialized research calls into a comprehensive final analysis.
      
      ## User's Original Request:
      {% for key, value in user_input.items() %}
      **{{ key }}**: {{ value }}
      {% endfor %}
      
      ## Research Findings Summary:
      {% for research in research_results %}
      
      ### Research Topic: {{ research.research_topic }}
      **Summary**: {{ research.summary }}
      **Key Findings**:
      {% for finding in research.key_findings %}
      - {{ finding }}
      {% endfor %}
      **Confidence Level**: {{ research.confidence_level }}
      ---
      {% endfor %}
      
      ## Analysis Requirements:
      Please synthesize ALL the research findings above into a comprehensive analysis that addresses the user's request.
      
      REQUIRED JSON OUTPUT FORMAT:
      {{ json_schema }}
      
      FIELD DEFINITIONS:
      {{ field_definitions }}
      
      SYNTHESIS REQUIREMENTS:
      - Combine all findings into the exact JSON format specified above
      - Each field must be thoroughly addressed based on the specialized research findings
      - Reference specific findings from the research above in your analysis
      - Ensure consistency across all research dimensions
      - Provide specific, actionable insights for each required field
      - Return ONLY the JSON object, no additional text
      
      Generate the complete analysis JSON now:

    # Research topic planning prompt template - for DurableOrchestrator research topic generation
    research_planning: |
      You are a research planning expert working with an AI analysis agent.

      ## Agent Expertise:
      {agent_personality}

      ## User Request:
      {user_input_summary}

      ## Task:
      Based on the agent's expertise and the user's request, generate exactly {num_topics} specific, actionable research topics that will provide comprehensive analysis. The topics should be relevant to the agent's domain of expertise.

      ## Output Format:
      Return ONLY a JSON array of exactly {num_topics} research topics as strings:
      ["Research topic 1", "Research topic 2", ...]

      Each topic should be specific, actionable, and focused on gathering concrete insights relevant to the agent's field of expertise.

    # Research execution call template - for DurableOrchestrator individual research calls
    research_call: |
      {starter_prompt}
      
      SPECIFIC FOCUS: {research_topic}
      
      USER INPUT:
      {formatted_user_input}
      
      RESEARCH REQUIREMENTS:
      Focus specifically on: {research_topic}
      Provide detailed research with specific data, examples, and actionable insights.
      Use recent market research and credible sources where applicable.
      
      IMPORTANT: Provide your research findings in this exact JSON format:
      {json_format_instructions}

      Focus on gathering factual, relevant information about: {research_topic}
      Include specific data points, statistics, or insights where possible.
      Return ONLY the JSON object, no additional text.

    # User instructions template - for Custom GPT guidance on collecting user input
    user_instructions: |
      You are helping a user with **{{ agent_name }}** analysis.

      ## What You Need to Collect

      I need you to gather the following information from the user. Take your time with each field and make sure you understand what they're looking for:

      {% for field in input_fields %}
      ### {{ loop.index }}. {{ field.name }}
      **What this means**: {{ field.description }}
      
      {% endfor %}

      ## How to Collect the Information

      1. **Go through each field one at a time** - Don't overwhelm the user by asking for everything at once
      2. **Explain what you need** - Use the field description to help the user understand what information you're looking for
      3. **Confirm their input** - When they provide information, repeat it back and ask if that's correct
      4. **Be patient** - If they want to change something, help them refine it
      5. **Continue until complete** - Make sure you have ALL the required information before proceeding

      ## Next Steps

      Once you have collected ALL the information above:
      1. Call the `get_pricepoints` endpoint to show pricing options
      2. After they select a tier, call `execute_analysis` with these exact field names:
         {{ field_names_json }}

      ## Important Notes
      - Use the exact field names shown above when calling the API
      - Make sure every required field has been collected before proceeding
      - Be helpful and encouraging throughout the process

      Ready to start? Ask the user for the first piece of information!